&НаКлиенте
Процедура СообщитьОкном(Сообщение, Заголовок)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Сообщение", Сообщение);
	СтруктураПараметров.Вставить("Заголовок", Заголовок);
	ОткрытьФорму("Справочник.ТелеграмБоты.Форма.ФормаСообщения", 
		СтруктураПараметров, 
		ЭтаФорма, 
		Новый УникальныйИдентификатор, , , , 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Функция ИнформацияОЧатеСервер(Бот)
	
	ОтветСервера = ТелеграмСервер.ВыполнитьМетодТелеграм(Бот, "getChat", Новый Структура("chat_id", Объект.Ид));
	Возврат ОтветСервера;
	
КонецФункции

&НаКлиенте
Процедура ИнформацияОЧате(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИнформацияОЧатеПредупреждение", ЭтаФорма);
	ПоказатьПредупреждение(ОписаниеОповещения, "Далее, выберите бота, через которого будет послан метод getChat");
	
КонецПроцедуры
	
&НаКлиенте
Процедура ИнформацияОЧатеПредупреждение(ДП) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИнформацияОЧатеВыбор", ЭтаФорма);
	ОткрытьФорму("Справочник.ТелеграмБоты.ФормаВыбора",
		,
		ЭтаФорма,
		УникальныйИдентификатор,
		,
		,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияОЧатеВыбор(Бот, ДП) Экспорт
	
	Если ТипЗнч(Бот) = Тип("СправочникСсылка.ТелеграмБоты") Тогда
		ОтветСервера = ИнформацияОЧатеСервер(Бот);
		СтрокаОтвета = ?(ОтветСервера.ЭтоJSON, ОтветСервера.СтрокаJSON, ОтветСервера.Строка);
		СообщитьОкном(СтрокаОтвета, "Ответ сервера Telegram");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСтатистики()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбъектСсылка = Объект.Ссылка;	
	Иначе
		ОбъектСсылка = Справочники.ТелеграмЧатыПользователи.ПолучитьСсылку(Новый УникальныйИдентификатор);		
	КонецЕсли;
	
	ТекПользователь = Статистика.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ТекущийПользователь");
	ТекПользователь.Использование = Истина;
	ТекПользователь.Значение = ОбъектСсылка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьОтборСтатистики();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьОтборСтатистики();
	ОбновитьТаблицуБотовСервер();
	
	// СтандартныеПодсистемы.РаботаСФайлами
    ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
    ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
    РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
    // Конец СтандартныеПодсистемы.РаботаСФайлами
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицуБотов(Команда)
	
	ОбновитьТаблицуБотовСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуБотовСервер()
	
	Боты.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТелеграмБоты.Ссылка
	|ИЗ
	|	Справочник.ТелеграмБоты КАК ТелеграмБоты
	|ГДЕ
	|	ТелеграмБоты.ОграниченныйДоступ
	|	И НЕ ТелеграмБоты.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Боты.Добавить();
		НоваяСтрока.Бот = Выборка.Ссылка;
		НоваяСтрока.Доступ = Объект.Боты.НайтиСтроки(
			Новый Структура("Бот", Выборка.Ссылка)).Количество() > 0;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура БотыДоступПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Боты.ТекущиеДанные;
	
	Бот = ТекущиеДанные.Бот;
	Доступ = ТекущиеДанные.Доступ;
	СтрокиБота = Объект.Боты.НайтиСтроки(Новый Структура("Бот", Бот));
	 
	Если ТекущиеДанные.Доступ Тогда
		Если СтрокиБота.Количество() = 0 Тогда
			НоваяСтрока = Объект.Боты.Добавить();
			НоваяСтрока.Бот = Бот;
		КонецЕсли;
	Иначе
		Для Каждого СтрокаБот Из СтрокиБота Цикл
			Объект.Боты.Удалить(СтрокаБот);
		КонецЦикла;
	КонецЕсли;
	
	НавСсылка = ПолучитьНавигационнуюСсылку(Бот);
	
	Если ТекущиеДанные.Доступ Тогда
		ПоказатьОповещениеПользователя("Открытие доступа", НавСсылка, 
			"При записи элемента будут выполнены специальные обработки 'Открыт доступ' бота", 
			БиблиотекаКартинок.ТелеграмИнформация);
	Иначе
		ПоказатьОповещениеПользователя("Закрытие доступа", НавСсылка,
			"При записи элемента будут выполнены специальные обработки 'Закрыт доступ' бота",
			БиблиотекаКартинок.ТелеграмИнформация);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    // СтандартныеПодсистемы.РаботаСФайлами
    РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
    // Конец СтандартныеПодсистемы.РаботаСФайлами
    
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
    
    // СтандартныеПодсистемы.РаботаСФайлами
    РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
    // Конец СтандартныеПодсистемы.РаботаСФайлами
    
КонецПроцедуры

#Область СтандартныеПодсистемы_РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
     РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
     РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
     РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
     РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти