&НаКлиенте
Процедура ОбъектКомандыРегламентноеЗаданиеПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ИзменитьРегламентноеЗадание(Истина, Ложь);
КонецПроцедуры 

&НаКлиенте
Процедура ОбъектКомандыНастроитьРасписание(Команда)
	ИзменитьРегламентноеЗадание(Истина, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПослеОкончанияРедактированияРасписания(Расписание, Контекст) Экспорт
	
	Если Расписание = Неопределено Тогда
		Если Контекст.ОтключитьФлажокПриОтменеРедактирования Тогда
			Объект.РегламентноеЗаданиеИспользование = Ложь;
		КонецЕсли;
	Иначе
		
		Если РазделениеВключено
			И Расписание.ПериодПовтораВТечениеДня <> 0
			И Расписание.ПериодПовтораВТечениеДня < 60 Тогда
			ТекстСообщения = НСтр("ru = 'Не допускается установка интервала повтора регламентного задания менее 60 секунд.'");
			ПоказатьПредупреждение(, ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		РегламентноеЗаданиеРасписание.Очистить();
		РегламентноеЗаданиеРасписание.Добавить(Расписание);
		Если ДополнительныеОтчетыИОбработкиКлиентСервер.РасписаниеЗадано(Расписание) Тогда
			Модифицированность = Истина;
			Объект.РегламентноеЗаданиеИспользование = Истина;
			
			РегламентноеЗаданиеПредставление = Строка(Расписание);
		Иначе
			РегламентноеЗаданиеПредставление = НСтр("ru = 'Не заполнено'");
			Если Объект.РегламентноеЗаданиеИспользование Тогда
				Объект.РегламентноеЗаданиеИспользование = Ложь;
				
				ПоказатьОповещениеПользователя(
				НСтр("ru = 'Запуск по расписанию отключен'"),
				,
				НСтр("ru = 'Расписание не заполнено'"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ИзменитьРегламентноеЗадание(РежимВыбора = Ложь, ИзмененФлажок = Ложь)
	
	//ЭлементКоманда = Элементы.ОбъектКоманды.ТекущиеДанные;
	//Если ЭлементКоманда = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если ЭлементКоманда.ВариантЗапуска <> ПредопределенноеЗначение("Перечисление.СпособыВызоваДополнительныхОбработок.ВызовСерверногоМетода")
	//	И ЭлементКоманда.ВариантЗапуска <> ПредопределенноеЗначение("Перечисление.СпособыВызоваДополнительныхОбработок.СценарийВБезопасномРежиме") Тогда
	//	ТекстОшибки = НСтр("ru = 'Команда с вариантом запуска ""%1""
	//	|не может использоваться в регламентных заданиях.'");
	//	ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Строка(ЭлементКоманда.ВариантЗапуска));
	//	ПоказатьПредупреждение(, ТекстОшибки);
	//	Если ИзмененФлажок Тогда
	//		ЭлементКоманда.РегламентноеЗаданиеИспользование = НЕ ЭлементКоманда.РегламентноеЗаданиеИспользование;
	//	КонецЕсли;
	//	Возврат;
	//КонецЕсли;
	
	Если ИзмененФлажок И Не Объект.РегламентноеЗаданиеИспользование Тогда
		Возврат;
	КонецЕсли;
	
	Если РегламентноеЗаданиеРасписание.Количество() > 0 Тогда
		РасписаниеКоманды = РегламентноеЗаданиеРасписание.Получить(0).Значение;
	Иначе
		РасписаниеКоманды = Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(РасписаниеКоманды) <> Тип("РасписаниеРегламентногоЗадания") Тогда
		РасписаниеКоманды = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	Контекст = Новый Структура;
	Контекст.Вставить("ОтключитьФлажокПриОтменеРедактирования", ИзмененФлажок);
	Обработчик = Новый ОписаниеОповещения("ПослеОкончанияРедактированияРасписания", ЭтотОбъект, Контекст);
	
	РедактированиеРасписания = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеКоманды);
	РедактированиеРасписания.Показать(Обработчик);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РазделениеВключено = ОбщегоНазначения.РазделениеВключено();			
	//Если КомандыСохраненные <> Неопределено Тогда
	//	НайденнаяСтрока = КомандыСохраненные.Найти(ЭлементКоманда.Идентификатор, "Идентификатор");
	//	Если НайденнаяСтрока <> Неопределено Тогда
	//		РегламентноеЗаданиеGUID = НайденнаяСтрока.РегламентноеЗаданиеGUID;
	//	КонецЕсли;
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.РегламентноеЗаданиеGUID) Тогда
		УстановитьПривилегированныйРежим(Истина);
		РегламентноеЗадание = РегламентныеЗаданияСервер.Задание(Объект.РегламентноеЗаданиеGUID);
		Если РегламентноеЗадание <> Неопределено Тогда
			РегламентноеЗаданиеПредставление = Строка(РегламентноеЗадание.Расписание);
			Объект.РегламентноеЗаданиеИспользование = РегламентноеЗадание.Использование;
			РегламентноеЗаданиеРасписание.Вставить(0, РегламентноеЗадание.Расписание);
		КонецЕсли;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РегламентноеЗаданиеПредставление) Тогда
		РегламентноеЗаданиеПредставление = НСтр("ru = 'Не заполнено'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьВручнуюНаСервере()
	Справочники.ТелеграмРассылки.ЗапуститьРассылку(Объект);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВручную(Команда)
	ВыполнитьВручнуюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РегламентноеЗаданиеИспользованиеПриИзменении(Элемент)
	Элементы.ОбъектКомандыНастроитьРасписание.Доступность = Объект.РегламентноеЗаданиеИспользование;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ОбъектКомандыНастроитьРасписание.Доступность = Объект.РегламентноеЗаданиеИспользование;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Регламентные задания необходимо изменять в привилегированном режиме.
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаданияДляОбновления = Новый Соответствие;
	
	// Очистка заданий по командам, которые были удалены из таблицы.
	Если НЕ ТекущийОбъект.РегламентноеЗаданиеИспользование 
		И ЗначениеЗаполнено(ТекущийОбъект.РегламентноеЗаданиеGUID)  Тогда
		РегламентныеЗаданияСервер.УдалитьЗадание(ТекущийОбъект.РегламентноеЗаданиеGUID);
		ТекущийОбъект.РегламентноеЗаданиеGUID = ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор();
	ИначеЕсли ТекущийОбъект.РегламентноеЗаданиеИспользование 
		И РегламентноеЗаданиеРасписание.Количество()>0 Тогда
		
		// Актуализация набора регламентных заданий для записи их идентификаторов в табличную часть.		
		Расписание    = РегламентноеЗаданиеРасписание[0].Значение;
		Использование = ТекущийОбъект.РегламентноеЗаданиеИспользование 
		И ДополнительныеОтчетыИОбработкиКлиентСервер.РасписаниеЗадано(Расписание);
		
		Если ЗначениеЗаполнено(ТекущийОбъект.РегламентноеЗаданиеGUID) Тогда		
			Попытка
				Задание = РегламентныеЗаданияСервер.Задание(ТекущийОбъект.РегламентноеЗаданиеGUID);
			Исключение 
				Задание = Неопределено;
			КонецПопытки;
		Иначе
			Задание = Неопределено;
		КонецЕсли;
		
		Если Задание = Неопределено Тогда // Не найдено
			Если Использование Тогда
				// Создать и зарегистрировать.
				ПараметрыЗадания = Новый Структура;
				ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.ТелеграмРассылка);
				ПараметрыЗадания.Вставить("Использование", Ложь);
				Задание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);
				//ЗаданияДляОбновления.Вставить(Объект.РегламентноеЗаданиеGUID, Задание);
				ТекущийОбъект.РегламентноеЗаданиеGUID = РегламентныеЗаданияСервер.УникальныйИдентификатор(Задание);
			Иначе
				// Действие не требуется
			КонецЕсли;
		Иначе // Найдено
			Если Использование Тогда
				// Зарегистрировать.
				ЗаданияДляОбновления.Вставить(ТекущийОбъект.РегламентноеЗаданиеGUID, Задание);
			Иначе
				// Удалить.
				РегламентныеЗаданияСервер.УдалитьЗадание(ТекущийОбъект.РегламентноеЗаданиеGUID);
				ТекущийОбъект.РегламентноеЗаданиеGUID = ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.РегламентноеЗаданиеGUID) Тогда
		Задание = РегламентныеЗаданияСервер.Задание(ТекущийОбъект.РегламентноеЗаданиеGUID);
		Изменения = Новый Структура;
		Изменения.Вставить("Использование", Ложь);
		Изменения.Вставить("Расписание", Неопределено);
		//[ВидОбъекта]: [НаименованиеОбъекта] / Команда: [ПредставлениеКоманды]
		Изменения.Вставить("Наименование", Лев("Телеграм рассылка: " + ТекущийОбъект.Наименование, 120));
		
		Изменения.Расписание    = РегламентноеЗаданиеРасписание[0].Значение;
		Изменения.Использование = ТекущийОбъект.РегламентноеЗаданиеИспользование
		И ДополнительныеОтчетыИОбработкиКлиентСервер.РасписаниеЗадано(Изменения.Расписание);
		
		ПараметрыПроцедуры = Новый Массив;
		ПараметрыПроцедуры.Добавить(ТекущийОбъект.Ссылка);
		
		Изменения.Вставить("Параметры", ПараметрыПроцедуры);
		
		//ИнтеграцияПодсистемБСП.ПередОбновлениемЗадания(ЭтотОбъект, Команда, Задание, Изменения);
		Если Изменения <> Неопределено Тогда
			РегламентныеЗаданияСервер.ИзменитьЗадание(Задание, Изменения);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
