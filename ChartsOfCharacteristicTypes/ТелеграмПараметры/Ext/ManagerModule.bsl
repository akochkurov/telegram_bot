
Функция ПолучитьСсылкуПараметраПоИмениИерархия(ЗНАЧ ПолноеИмяПараметра) Экспорт
	
	МассивВложенностей = СтрРазделить(ПолноеИмяПараметра,".",Ложь);
	ИмяПараметра =  МассивВложенностей[МассивВложенностей.Количество()-1];
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТелеграмПараметры.Родитель КАК Группа,
	|	ТелеграмПараметры.Код КАК Параметр,
	|	ТелеграмПараметры.Ссылка КАК Значение
	|ИЗ
	|	ПланВидовХарактеристик.ТелеграмПараметры КАК ТелеграмПараметры
	|ГДЕ
	|	НЕ ТелеграмПараметры.ЭтоГруппа
	|	И НЕ ТелеграмПараметры.ПометкаУдаления
	|	И ТелеграмПараметры.Код = &ИмяПараметра
	|ИТОГИ ПО
	|	Группа ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("ИмяПараметра", ИмяПараметра);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Дерево = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ЗначенияПараметров = Новый Структура();
	Для каждого стр из Дерево.Строки Цикл		
		
		Если НЕ ЗначениеЗаполнено(стр.Группа) Тогда 
			РекурсивноеЗаполнениеСтруктуры(ЗначенияПараметров,стр.Строки);			

		ИначеЕсли стр.Строки.Количество()>0 Тогда
			ТекущаяСтрока = Новый Структура();
			РекурсивноеЗаполнениеСтруктуры(ТекущаяСтрока,стр.Строки);
			ЗначенияПараметров.Вставить(Строка(стр.Группа),ТекущаяСтрока);
		КонецЕсли;
				
	КонецЦикла;
		
	Для Каждого стрВложеность из МассивВложенностей Цикл
		Если ЗначенияПараметров.Свойство(стрВложеность) Тогда
			ЗначенияПараметров =  ЗначенияПараметров[стрВложеность];
		Иначе
			ЗначенияПараметров = Неопределено;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЗначенияПараметров;
	
КонецФункции


Функция ПолучитьМассивСсылокПараметровПоИменамИерархия(ЗНАЧ ПолноеИмяПараметраСтрокаМассивСтрок) Экспорт
	
	СтруктураМассив = ПреобразоватьИмяПараметраВМассивИмен(ПолноеИмяПараметраСтрокаМассивСтрок);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТелеграмПараметры.Родитель КАК Группа,
	|	ТелеграмПараметры.Код КАК Параметр,
	|	ТелеграмПараметры.Ссылка КАК Значение
	|ИЗ
	|	ПланВидовХарактеристик.ТелеграмПараметры КАК ТелеграмПараметры
	|ГДЕ
	|	НЕ ТелеграмПараметры.ЭтоГруппа
	|	И НЕ ТелеграмПараметры.ПометкаУдаления
	|	И ТелеграмПараметры.Код В (&МассивИменПараметра)
	|ИТОГИ ПО
	|	Группа ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("МассивИменПараметра", СтруктураМассив.МассивИмен);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Дерево = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ЗначенияПараметров = Новый Структура();
	Для каждого стр из Дерево.Строки Цикл		
		
		Если НЕ ЗначениеЗаполнено(стр.Группа) Тогда 
			РекурсивноеЗаполнениеСтруктуры(ЗначенияПараметров,стр.Строки);			

		ИначеЕсли стр.Строки.Количество()>0 Тогда
			ТекущаяСтрока = Новый Структура();
			РекурсивноеЗаполнениеСтруктуры(ТекущаяСтрока,стр.Строки);
			ЗначенияПараметров.Вставить(Строка(стр.Группа),ТекущаяСтрока);
		КонецЕсли;
				
	КонецЦикла;
	
	Результат = Новый Массив();
	
	Для Каждого ПолноеИмяПараметраСтрока из СтруктураМассив.МассивПараметров Цикл
		
		МассивВложенностей = СтрРазделить(ПолноеИмяПараметраСтрока,".",Ложь);
		
		Для Каждого стрВложеность из МассивВложенностей Цикл
			Если ЗначенияПараметров.Свойство(стрВложеность) Тогда
				Результат.Добавить(ЗначенияПараметров[стрВложеность]);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции


Функция ПреобразоватьИмяПараметраВМассивИмен(ПолноеИмяПараметраМассив)
	
	МассивИмен = Новый Массив();
	МассивПараметров = ПолноеИмяПараметраМассив;
	
	Если ТипЗнч(ПолноеИмяПараметраМассив) = Тип("Массив") Тогда
		
		Для Каждого стр из ПолноеИмяПараметраМассив Цикл 
			МассивВложенностей = СтрРазделить(стр,".",Ложь);
			ИмяПараметра =  МассивВложенностей[МассивВложенностей.Количество()-1];
			МассивИмен.Добавить(ИмяПараметра);
		КонецЦикла;
		
	Иначе
		МассивСтрок = СтрРазделить(ПолноеИмяПараметраМассив,",",Ложь);
		Возврат ПреобразоватьИмяПараметраВМассивИмен(МассивСтрок);
		
	КонецЕсли;

	Возврат Новый Структура("МассивИмен,МассивПараметров", МассивИмен, МассивПараметров);
	
	
КонецФункции

Процедура РекурсивноеЗаполнениеСтруктуры(ТекущаяСтруктура,Строки)
	
	Для Каждого стр из Строки Цикл
		Если стр.Строки.Количество()>0 Тогда
			
			Если стр.Группа = стр.Родитель.Группа Тогда
				
				Для Каждого стрТекущаяГруппа из стр.Строки Цикл
					ТекущаяСтруктура.Вставить(Строка(стрТекущаяГруппа.Параметр), стрТекущаяГруппа.Значение);
				КонецЦикла;
				Продолжить;	
				
			Иначе
				ТекущаяСтрока = Новый Структура();
			КонецЕсли;
			
			РекурсивноеЗаполнениеСтруктуры(ТекущаяСтрока,стр.Строки);
			ТекущаяСтруктура.Вставить(Строка(стр.Группа),ТекущаяСтрока);
		Иначе
			ТекущаяСтруктура.Вставить(Строка(стр.Параметр),стр.Значение);
		КонецЕсли;
	КонецЦикла;	

КонецПроцедуры


Функция ПредставлениеПараметраВИерархии(ПараметрСсылка) Экспорт
	
	ПредставлениеПараметра = Строка(ПараметрСсылка);
	Родитель = ПараметрСсылка.Родитель;
	Пока ЗначениеЗаполнено(Родитель) Цикл
		ПредставлениеПараметра = Родитель.Код + "." + ПредставлениеПараметра;
		Родитель = Родитель.Родитель;
	КонецЦикла;
	
	Возврат ПредставлениеПараметра;
	
КонецФункции
