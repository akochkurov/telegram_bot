Функция ВыполнитьСервис(Сервис, Бот, ВходящееОбновление = Неопределено, ВыборкаОбработок = Неопределено) Экспорт
	
	Если ТипЗнч(ВходящееОбновление) <> Тип("Структура") Тогда
		ВходящееОбновление = Новый Структура;
		ТелеграмСервер.ДополнитьСтруктуруВходящегоОбновления(ВходящееОбновление);
	КонецЕсли;
	
	ПрерватьВыполнение = Неопределено;
	ВходящееОбновление.Свойство("ПрерватьВыполнение", ПрерватьВыполнение);
	Если ПрерватьВыполнение = Истина Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ВыборкаОбработок = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Сервис", Сервис);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТелеграмСервисыОбработки.Ссылка КАК Сервис,
		|	ТелеграмСервисыОбработки.НомерСтроки КАК НомерСтроки,
		|	ТелеграмСервисыОбработки.Обработка,
		|	ТелеграмСервисыОбработки.Обработка.Наименование КАК Наименование,
		|	ТелеграмСервисыОбработки.Обработка.КодОбработки КАК КодОбработки
		|ИЗ
		|	Справочник.ТелеграмСервисы.Обработки КАК ТелеграмСервисыОбработки
		|ГДЕ
		|	ТелеграмСервисыОбработки.Ссылка = &Сервис
		|	И ТелеграмСервисыОбработки.Обработка.Используется
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		ВыборкаОбработок = Запрос.Выполнить().Выбрать();
	КонецЕсли;
	
	ПоляПоиска = Новый Структура("Сервис", Сервис);
	ВыборкаОбработок.Сбросить();
	
	Пока ВыборкаОбработок.НайтиСледующий(ПоляПоиска) Цикл
		Справочники.ТелеграмОбработки.ВыполнитьОбработку(
			ВыборкаОбработок.Обработка, 
			Бот, 
			ВходящееОбновление, 
			ВыборкаОбработок.КодОбработки,
			Сервис);
	КонецЦикла;
	
КонецФункции

Функция СервисыДляВыполнения(ВыборкаСервисов, ВходящееОбновление) Экспорт
	
	ТаблицаУсловий = ТелеграмСерверПовтИсп.СервисыДляВыполнения_ПустаяТаблицаУсловий();
	
	МассивСервисов = Новый Массив;
	Пока ВыборкаСервисов.Следующий() Цикл
		ТаблицаУсловий.Очистить();
		ВыборкаУсловий = ВыборкаСервисов.Выбрать();
		Пока ВыборкаУсловий.Следующий() Цикл
			НоваяСтрока = ТаблицаУсловий.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаУсловий);
		КонецЦикла;
		СтруктураУсловия = Новый Структура("Родитель, Код, ЛогическаяГруппа, Условие, ВидСравнения, Значение");
		ЗаполнитьЗначенияСвойств(СтруктураУсловия, ТаблицаУсловий[0]);
		РезультатУсловия = РезультатУсловия(СтруктураУсловия, ТаблицаУсловий, ВходящееОбновление);
		Если РезультатУсловия = Истина Тогда
			МассивСервисов.Добавить(ВыборкаСервисов.Сервис);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивСервисов;
	
КонецФункции

Функция РезультатУсловия(СтруктураУсловия, ТаблицаУсловий, ВходящееОбновление)
	
	ВидыСравнения = Перечисления.ТелеграмВидыСравнения;
	Если ЗначениеЗаполнено(СтруктураУсловия.ЛогическаяГруппа) Тогда
		ЛогическаяГруппа = СтруктураУсловия.ЛогическаяГруппа;
		РезультатУсловияГруппы = Неопределено;
		ПоляПоиска = Новый Структура("Родитель", СтруктураУсловия.Код);
		Найдены = ТаблицаУсловий.НайтиСтроки(ПоляПоиска);
		Для Каждого Найден Из Найдены Цикл
			СтруктураВложенногоУсловия = Новый Структура("Родитель, Код, ЛогическаяГруппа, Условие, ВидСравнения, Значение");
			ЗаполнитьЗначенияСвойств(СтруктураВложенногоУсловия, Найден);
			РезультатУсловия = РезультатУсловия(СтруктураВложенногоУсловия, ТаблицаУсловий, ВходящееОбновление);
			Если ЛогическаяГруппа = Перечисления.ТелеграмЛогическиеГруппы.ГруппаИ Тогда
				Если РезультатУсловия = Истина Тогда
					РезультатУсловияГруппы = Истина;
				Иначе
					РезультатУсловияГруппы = Ложь;
					Прервать;
				КонецЕсли;
			ИначеЕсли ЛогическаяГруппа = Перечисления.ТелеграмЛогическиеГруппы.ГруппаИли Тогда
				Если РезультатУсловия = Истина Тогда
					РезультатУсловияГруппы = Истина;
					Прервать;
				Иначе
					РезультатУсловияГруппы = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат РезультатУсловияГруппы
	Иначе
		ЛевоеЗначение = ПланыВидовХарактеристик.ТелеграмУсловия.ЗначениеУсловия(СтруктураУсловия.Условие, ВходящееОбновление);
		ПравоеЗначение = СтруктураУсловия.Значение;
		ТипЛ = ТипЗнч(ЛевоеЗначение);
		ТипП = ТипЗнч(ПравоеЗначение);
		Если СтруктураУсловия.ВидСравнения = ВидыСравнения.Больше Тогда
			Если ТипЛ = ТипП Тогда
				РезультатУсловия = ЛевоеЗначение > ПравоеЗначение;
			Иначе
				РезультатУсловия = Ложь;
			КонецЕсли;
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.БольшеИлиРавно Тогда
			Если ТипЛ = ТипП Тогда
				РезультатУсловия = ЛевоеЗначение >= ПравоеЗначение;
			Иначе
				РезультатУсловия = Ложь;
			КонецЕсли;
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.Заполнено Тогда
			РезультатУсловия = ЗначениеЗаполнено(ЛевоеЗначение);
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.Меньше Тогда
			Если ТипЛ = ТипП Тогда
				РезультатУсловия = ЛевоеЗначение < ПравоеЗначение;
			Иначе
				РезультатУсловия = Ложь;
			КонецЕсли;
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.МеньшеИлиРавно Тогда
			Если ТипЛ = ТипП Тогда
				РезультатУсловия = ЛевоеЗначение <= ПравоеЗначение;
			Иначе
				РезультатУсловия = Ложь;
			КонецЕсли;
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.НачинаетсяС Тогда
			Если ТипЛ = Тип("Строка") И ТипП = ТипЛ Тогда
				ДлинаП = СтрДлина(ПравоеЗначение);
				ЧастьЛ = Лев(ЛевоеЗначение, ДлинаП);
				РезультатУсловия = (нРег(ЧастьЛ) = нРег(ПравоеЗначение));
			Иначе
				РезультатУсловия = Ложь;
			КонецЕсли;
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.НеЗаполнено Тогда
			РезультатУсловия = НЕ ЗначениеЗаполнено(ЛевоеЗначение);
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.НеНачинаетсяС Тогда
			Если ТипЛ = Тип("Строка") И ТипП = ТипЛ Тогда
				ДлинаП = СтрДлина(ПравоеЗначение);
				ЧастьЛ = Лев(ЛевоеЗначение, ДлинаП);
				РезультатУсловия = (нРег(ЧастьЛ) <> нРег(ПравоеЗначение));
			Иначе
				РезультатУсловия = Истина;
			КонецЕсли;
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.НеРавно Тогда
			Если ТипЛ = ТипП Тогда
				Если ТипЛ = Тип("Строка") Тогда
					РезультатУсловия = нРег(ЛевоеЗначение) <> нРег(ПравоеЗначение);
				Иначе
					РезультатУсловия = ЛевоеЗначение <> ПравоеЗначение;
				КонецЕсли;
			Иначе
				РезультатУсловия = Истина;
			КонецЕсли;
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.НеСодержит Тогда
			Если ТипЛ = Тип("Строка") И ТипП = ТипЛ Тогда
				РезультатУсловия = (СтрНайти(нРег(ЛевоеЗначение), нРег(ПравоеЗначение)) = 0)
			Иначе
				РезультатУсловия = Истина;
			КонецЕсли;
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.Равно Тогда
			Если ТипЛ = ТипП Тогда
				Если ТипЛ = Тип("Строка") Тогда
					РезультатУсловия = нРег(ЛевоеЗначение) = нРег(ПравоеЗначение);
				Иначе
					РезультатУсловия = ЛевоеЗначение = ПравоеЗначение;
				КонецЕсли;
			Иначе
				РезультатУсловия = Ложь;
			КонецЕсли;
		ИначеЕсли СтруктураУсловия.ВидСравнения = ВидыСравнения.Содержит Тогда
			Если ТипЛ = Тип("Строка") И ТипП = ТипЛ Тогда
				РезультатУсловия = (СтрНайти(нРег(ЛевоеЗначение), нРег(ПравоеЗначение)) > 0)
			Иначе
				РезультатУсловия = Ложь;
			КонецЕсли;
		Иначе
			РезультатУсловия = Ложь;
		КонецЕсли;
		Возврат РезультатУсловия;
	КонецЕсли;
	
КонецФункции